{"version":3,"sources":["reducers/reducer.js","store.js","songbook/sidebar/songlist/SongList.js","songbook/sidebar/addnew/AddNew.js","songbook/sidebar/SideBar.js","tools/constants.js","tools/Music.js","songbook/content/songbody/SongBody.js","songbook/content/songactions/SongActions.js","songbook/content/songinfo/SongInfo.js","songbook/content/admintools/AdminTools.js","songbook/content/songtools/SongTools.js","songbook/content/Content.js","songbook/frontpage/FrontPage.js","songbook/SongBook.js","login/Login.js","index.js"],"names":["initialState","songs","active","undefined","addNew","readyToSave","combineReducers","state","arguments","length","action","type","Object","objectSpread","payload","map","song","i","concat","title","body","slice","defineProperty","prop","value","toConsumableArray","_id","push","selected","isNaN","Math","floor","random","l","filter","login","admin","window","localStorage","getItem","removeItem","view","showEdit","showInfo","showTools","middleware","applyMiddleware","logger","store","createStore","reducer","SongList","select","_this","props","dispatch","_this2","this","react_default","a","createElement","className","id","Link","key","to","onClick","React","Component","connect","AddNew","addNewSong","SideBar","sidebar_addnew_AddNew","sidebar_songlist_SongList","noteMap","Ab","A","A#","Bb","B","B#","Cb","C","C#","Db","D","D#","Eb","E","E#","Fb","F","F#","Gb","G","G#","Hb","H","H#","transpose","up","down","isChordRow","row","words","split","includes","charAt","getInterval","from","idx1","idx2","interval","transposeNote","note","semitones","transposedIdx","isNegative","transposeRow","output","isChord","overflow","previousIndex","previousWasWhitespace","test","chordIndexes","forEach","chord","substring","transposed","bassIdx","indexOf","baseLen","accidental","base","substr","transposeChord","spaceLen","repeat","transposeBody","semitonesInt","parseInt","SongBody","contentEditable","createRef","update","options","rows","htmlToBodyArray","setContent","getContent","target","current","innerHTML","wrap","div","document","appendChild","createTextNode","maxWidth","clientWidth","scrollWidth","newRows","thisRow","nextRow","classList","add","chords","onPaste","event","preventDefault","data","clipboardData","getData","replace","shift","prevProps","edit","suppressContentEditableWarning","ref","onInput","onChange","SongActions","toggleEditView","updateView","fa","size","SongInfo","createDiv","name","opt","style","marginRight","content","link","href","show","_this$props$song","composer","lyricist","performer","recording","info","marginTop","AdminTools","delete","cancel","setState","setTimeout","axios","headers","authorization","then","result","catch","error","console","log","logout","buttonTitle","updateViewOrSave","color","SongTools","direction","componentDidMount","guessKey","lastChord","changeSemitones","Number","newState","changeDirection","changeFrom","changeTo","setSongBody","Array","x","verticalAlign","Content","redirect","songBody","componentDidUpdate","save","post","put","Redirect","songactions_SongActions","songinfo_SongInfo","content_songtools_SongTools","content_admintools_AdminTools","content_songbody_SongBody","FrontPage","SongBook","toFrontPage","get","response","sort","b","localeCompare","match","songId","params","songbook_sidebar_SideBar","songbook_content_Content","frontpage_FrontPage","Login","password","handleChange","handleKeyPress","token","setItem","disabled","onKeyPress","ReactDOM","render","es","BrowserRouter","Switch","Route","exact","path","component","getElementById"],"mappings":"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","file":"static/js/main.09a32dd8.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\n\nconst initialState = {\n    songs: [],\n    active: undefined,\n    addNew: false,\n    readyToSave: false\n}\n\nconst songReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_SONGS':\n            return { ...state, songs: action.payload }\n        case 'SET_SONG':\n            return {\n                ...state,\n                songs: state.songs.map((song, i) => {\n                    if (i === state.active) {\n                        return action.payload\n                    }\n                    return song\n                })\n            }\n        case 'SET_ACTIVE':\n            return { ...state, active: action.payload }\n        case 'NEW_SONG':\n            return {\n                ...state,\n                songs: state.songs.concat({ title: '', body: [] }),\n                active: state.songs.length,\n                addNew: true,\n                readyToSave: false\n            }\n        case 'CANCEL_NEW_SONG':\n            return { songs: state.songs.slice(0, state.songs.length - 1) }\n        case 'SET_ACTIVE_PROP': {\n            const songs = state.songs.map((song, i) => {\n                if (i !== state.active) return song\n                return { ...song, [action.payload.prop]: action.payload.value }\n            })\n            return { ...state, songs }\n        }\n        case 'SET_READY_TO_SAVE':\n            return { ...state, readyToSave: action.payload }\n        case 'PUT_SONG':\n            let songs = [...state.songs]\n            for (let i = 0; i < songs.length; i++) {\n                if (songs[i]._id === action.payload._id) {\n                    songs[i] = action.payload\n                    return { ...state, songs }\n                }\n            }\n            songs.push(action.payload)\n            return { ...state, songs }\n        case 'SELECT_SONG':\n            return { ...state, selected: action.payload }\n        case 'CHANGE_SONG': {\n            let i = 0\n            if (isNaN(action.payload)) {\n                i = Math.floor(Math.random() * state.songs.length)\n            } else {\n                const l = state.songs.length\n                i = state.selected + action.payload\n                i = i < 0 ? (i % l) + l : i % l\n            }\n            return { ...state, selected: i }\n        }\n        case 'DELETE_ACTIVE':\n            return { songs: state.songs.filter((song, i) => i !== state.active) }\n        default:\n            return state\n    }\n}\n\nconst viewReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'OPEN_EDIT_VIEW':\n            return { ...state, showEdit: true }\n        case 'TOGGLE_VIEW_EDIT':\n            return { ...state, showEdit: !state.showEdit }\n        case 'TOGGLE_VIEW_INFO':\n            return { ...state, showInfo: !state.showInfo }\n        case 'TOGGLE_VIEW_TOOLS':\n            return { ...state, showTools: !state.showTools }\n        default:\n            return state\n    }\n}\n\nconst loginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'LOG_IN':\n            return { admin: window.localStorage.getItem('admin') }\n        case 'LOG_OUT':\n            window.localStorage.removeItem('admin')\n            return {}\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    songs: songReducer,\n    login: loginReducer,\n    view: viewReducer\n})\n","import { applyMiddleware, createStore } from \"redux\";\nimport logger from 'redux-logger'\nimport reducer from './reducers/reducer'\n\nconst middleware = applyMiddleware(logger)\n\nconst store = createStore(reducer, middleware)\n\nexport default store\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './SongList.css'\n\nclass SongList extends React.Component {\n    select = i => () => {\n        this.props.dispatch({ type: 'SET_ACTIVE', payload: i })\n    }\n\n    render() {\n        return (\n            <div className=\"SongList\">\n                {this.props.songs.map((song, i) => {\n                    const id = song._id\n                    return (\n                        <Link key={'SongLink' + id} to={`/songs/${id}`}>\n                            <div\n                                className={i === this.props.active ? 'songlink selected' : 'songlink'}\n                                onClick={this.select(i)}\n                            >\n                                {song.title}\n                            </div>\n                        </Link>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        songs: state.songs.songs,\n        active: state.songs.active\n    }\n}\n\nexport default connect(mapStateToProps)(SongList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './AddNew.css'\n\nclass AddNew extends React.Component {\n\n    addNewSong = () => {\n        this.props.dispatch({type: 'NEW_SONG'})\n        this.props.dispatch({type: 'OPEN_EDIT_VIEW'})\n    }\n\n    render() {\n        if (!this.props.admin) return null\n\n        return (\n            <div className=\"AddNew\">\n                <Link to={`/songs/new`}>\n                    <div onClick={this.addNewSong}>\n                        Lisää uusi kappale\n                    </div>\n                </Link>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        admin: state.login.admin\n    }\n}\n\nexport default connect(mapStateToProps)(AddNew)\n","import React from 'react'\nimport SongList from './songlist/SongList'\nimport AddNew from './addnew/AddNew'\nimport './SideBar.css'\n\nclass SideBar extends React.Component {\n    render() {\n        return (\n            <div className=\"SideBar roundedbox\">\n                <AddNew />\n                <SongList />\n            </div>\n        )\n    }\n}\n\nexport default SideBar\n","export const noteMap = {\n    'Ab': 0,\n    'A': 1,\n    'A#': 2,\n    'Bb': 2,\n    'B': 3,\n    'B#': 4,\n    'Cb': 3,\n    'C': 4,\n    'C#': 5,\n    'Db': 5,\n    'D': 6,\n    'D#': 7,\n    'Eb': 7,\n    'E': 8,\n    'E#': 9,\n    'Fb': 8,\n    'F': 9,\n    'F#': 10,\n    'Gb': 10,\n    'G': 11,\n    'G#': 0,\n    'Hb': 2,\n    'H': 3,\n    'H#': 4\n}\n\nexport const transpose = {\n    up: ['G#', 'A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G' ],\n    down: ['Ab', 'A', 'Bb', 'B', 'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G' ]\n}\n","import { noteMap, transpose } from './constants'\n\nexport const isChordRow = row => {\n    if (!row) return false\n    const words = row.split(/\\s/)\n\n    // check that none of the words start with non-chord character\n    for (let i = 0; i < words.length; i++) {\n        const notes = 'ABCDEFGH'\n        if (!notes.includes(words[i].charAt(0))) {\n            return false\n        }\n    }\n\n    return true\n}\n\nexport const toString = (song, options = {}) => {\n    if (!song) {\n        return ''\n    }\n\n    let output = ''\n    if (options.showTitle) {\n        output = song.title + '\\n\\n'\n    }\n\n    let rows = song.body\n    if (options.hideChords) {\n        rows = rows.filter(row => !row.cho)\n    }\n\n    output = rows\n        .reduce((acc, cur) => {\n            return acc + cur[Object.keys(cur)[0]] + '\\n'\n        }, output)\n        .trimEnd()\n\n    return output\n}\n\nexport const getInterval = (from, to) => {\n    if (from === to) return null\n    const idx1 = noteMap[from]\n    const idx2 = noteMap[to]\n    if (idx1 === undefined || idx2 === undefined) return undefined\n    let interval = idx2 - idx1\n    if (interval < -5) {\n        interval = interval + 12\n    }\n    if (interval > 6) {\n        interval = interval - 12\n    }\n\n    if (interval === 0) {\n        if (from === 'H' || to === 'H') {\n            return null\n        }\n        if (from.includes('#') || to.includes('b')) {\n            return -0\n        } else {\n            return +0\n        }\n    }\n    return interval\n}\n\nconst isNegative = semitones => {\n    return 1 / semitones < 0\n}\n\nexport const transposeNote = (note, semitones) => {\n    if (semitones === null) return note\n    let transposedIdx = noteMap[note] + semitones\n    while (transposedIdx < 0) {\n        transposedIdx = transposedIdx + 12\n    }\n    while (transposedIdx >= 12) {\n        transposedIdx = transposedIdx - 12\n    }\n    const transposed = isNegative(semitones) ? transpose.down : transpose.up\n    return transposed[transposedIdx]\n}\n\nexport const transposeChord = (chord, semitones) => {\n    const bassIdx = chord.indexOf('/') + 1\n    if (bassIdx > 0 && chord.length > bassIdx) {\n        chord = chord.substring(0, bassIdx) + transposeNote(chord.substring(bassIdx), semitones)\n    }\n    let baseLen = 0\n    const accidental = chord.charAt(1)\n    if (accidental === '#' || accidental === 'b') {\n        baseLen = 2\n    } else {\n        baseLen = 1\n    }\n    const base = chord.substr(0, baseLen)\n    return transposeNote(base, semitones) + chord.substring(baseLen)\n}\n\nconst chordIndexes = row => {\n    let output = []\n    let previousWasWhitespace = true\n    for (let i = 0; i < row.length; i++) {\n        if (previousWasWhitespace) {\n            if (/\\S/.test(row.charAt(i))) {\n                output = output.concat(i)\n                previousWasWhitespace = false\n            }\n        } else {\n            if (/\\s/.test(row.charAt(i))) {\n                output = output.concat(i)\n                previousWasWhitespace = true\n            }\n        }\n    }\n    output = output.concat(row.length)\n    return output\n}\n\nexport const transposeRow = (row, semitones) => {\n    let output = ''\n    let isChord = false\n    let overflow = 0\n    let previousIndex = 0\n    chordIndexes(row).forEach(i => {\n        if (isChord) {\n            const chord = row.substring(previousIndex, i)\n            const transposed = transposeChord(chord, semitones)\n            overflow = transposed.length - chord.length\n            output = output + transposed\n        } else {\n            let spaceLen = i - previousIndex\n            if (spaceLen < overflow) {\n                spaceLen = 0\n                overflow = overflow - spaceLen\n            } else {\n                spaceLen = spaceLen - overflow\n            }\n            output = output + ' '.repeat(spaceLen)\n        }\n        previousIndex = i\n        isChord = !isChord\n    })\n    return output\n}\n\nexport const transposeBody = (body, semitones) => {\n    const semitonesInt = parseInt(semitones)\n    const output = body.map(row => {\n        if (row.type === 'chord') {\n            return {\n                type: 'chord',\n                value: transposeRow(row.value, semitonesInt)\n            }\n        }\n        return row\n    })\n    return output\n}\n","import React from 'react'\n\nimport { isChordRow } from '../../../tools/Music'\n\nimport './SongBody.css'\n\nclass SongBody extends React.Component {\n    contentEditable = React.createRef()\n\n    componentDidUpdate(prevProps) {\n        if (this.props.options !== prevProps.options) {\n            this.setContent(this.htmlToBodyArray())\n        }\n    }\n\n    update = (options) => {\n        const rows = this.htmlToBodyArray()\n        this.setContent(rows, options)\n    }\n\n    getContent = () => {\n        return this.htmlToBodyArray()\n    }\n\n    setContent = (rows, options) => {\n        const target = this.contentEditable.current\n\n        target.innerHTML = ''\n\n        if (options.wrap) {\n            //figure out row width in chars\n            const div = document.createElement('div')\n            div.appendChild(document.createTextNode('x'.repeat(1000)))\n            target.appendChild(div)\n            const maxWidth = Math.floor(\n                (target.clientWidth / div.scrollWidth) * 1000\n            )\n            target.innerHTML = ''\n\n            //split as needed\n            let newRows = []\n            for (let i = 0; i < rows.length; i++) {\n                const thisRow = rows[i]\n                const nextRow = rows[i + 1] ? rows[i + 1] : {}\n                if (thisRow.type === 'chord' && nextRow.type === 'lyric') {\n                    // handle as a pair\n                    newRows = newRows.concat(thisRow)\n                    newRows = newRows.concat(nextRow)\n                    i++\n                    continue\n                } else {\n                    // singular row\n                    do {\n                        newRows = newRows.concat({\n                            type: thisRow.type,\n                            value: thisRow.value.substring(0, maxWidth)\n                        })\n                        thisRow.value = thisRow.value.substring(maxWidth)\n                    } while (thisRow.value.length > 0)\n                }\n            }\n            rows = newRows\n        }\n\n        rows.forEach(row => {\n            const div = document.createElement('div')\n            div.classList.add(row.type + '-row')\n            if (options.chords && row.type === 'chord') {\n                div.classList.add(options.chords)\n            }\n            if (row.value !== '') {\n                div.appendChild(document.createTextNode(row.value))\n            } else {\n                div.appendChild(document.createElement('br'))\n            }\n            target.appendChild(div)\n        })\n    }\n\n    onPaste = event => {\n        event.preventDefault()\n        const data = event.clipboardData.getData('text/plain')\n        this.contentEditable.current.innerHTML = data\n    }\n\n    htmlToBodyArray = () => {\n        const rows = this.contentEditable.current.innerHTML\n            .replace(/&nbsp;/g, ' ')\n            .replace(/<\\/div>|<br>/g, '')\n            .split(/<div.*?>|\\n/)\n            .map(row => {\n                return { type: isChordRow(row) ? 'chord' : 'lyric', value: row }\n            })\n        if (rows[0].value === '') rows.shift()\n        return rows\n    }\n\n    render() {\n\n        return (\n            <div\n                className=\"SongBody\"\n                contentEditable={this.props.edit}\n                suppressContentEditableWarning\n                ref={this.contentEditable}\n                onPaste={this.onPaste}\n                onInput={this.props.onChange}>\n                some stuff here\n            </div>\n        )\n    }\n}\n\nexport default SongBody\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { FaArrowLeft, FaArrowRight, FaRandom, FaWrench, FaInfo, FaEdit } from 'react-icons/fa'\n\nclass SongActions extends React.Component {\n    toggleEditView = () => {\n        this.props.dispatch({ type: 'TOGGLE_VIEW_EDIT'})\n        this.props.updateView()\n    }\n\n    render() {\n        return (\n            <div className=\"SongActions\">\n                <FaArrowLeft size={42} onClick={() => this.props.dispatch({ type: 'CHANGE_SONG', payload: -1 })} />\n                <FaRandom size={42} onClick={() => this.props.dispatch({ type: 'CHANGE_SONG', payload: 'random' })} />\n                <FaArrowRight size={42} onClick={() => this.props.dispatch({ type: 'CHANGE_SONG', payload: 1 })} />\n                <FaWrench className=\"song-menu-right\" size={42} onClick={() => this.props.dispatch({type: 'TOGGLE_VIEW_TOOLS'})} />\n                <FaInfo\n                    className=\"song-menu-right\"\n                    size={42}\n                    onClick={() => this.props.dispatch({ type: 'TOGGLE_VIEW_INFO'})}\n                />\n                {this.props.admin ? (\n                    <FaEdit className=\"song-menu-right\" size={42} onClick={this.toggleEditView} />\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        songs: state.login,\n        admin: state.login.admin\n    }\n}\n\nexport default connect(mapStateToProps)(SongActions)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass SongInfo extends React.Component {\n\n    createDiv = (name, value, opt = {}) => {\n        if (!value) return null\n        const title = name ? <span style={{marginRight: '0.5em'}}>{name}:</span> : name\n        const content = opt.link\n            ? <a href={value}>{value}</a>\n            : value\n        return (\n            <div style={opt.style}>\n                {title} {content}\n                <br />\n            </div>\n        )\n    }\n\n    render() {\n        if (!this.props.show) return null\n\n        const { composer, lyricist, performer, recording, info } = this.props.song\n\n        return (\n            <div className=\"SongInfo\">\n                <div className=\"song-info-left\">\n                    {this.createDiv('Säveltäjä', composer)}\n                    {this.createDiv('Sanoittaja', lyricist)}\n                    {this.createDiv('Esittäjä', performer)}\n                    {this.createDiv('Tallenne', recording, {link: true})}\n                    {this.createDiv(null, info, {style: {marginTop: '0.5em'}})}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        song: state.songs.songs[state.songs.active],\n        show: state.view.showInfo\n    }\n}\nexport default connect(mapStateToProps)(SongInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport './AdminTools.css'\n\nclass AdminTools extends React.Component {\n    state = { delete: false }\n\n    edit = prop => event => {\n        const action = {\n            type: 'SET_ACTIVE_PROP',\n            payload: { prop, value: event.target.value }\n        }\n        this.props.dispatch(action)\n    }\n\n    cancel = () => {\n        this.props.dispatch({ type: 'CANCEL_NEW_SONG' })\n    }\n\n    delete = () => {\n        if (!this.state.delete) {\n            this.setState({ delete: true })\n            setTimeout(() => this.setState({ delete: false }), 5000)\n            return\n        }\n        axios\n            .delete('/api/songs/' + this.props.song._id, this.props.song, {\n                headers: { authorization: 'bearer ' + this.props.admin }\n            })\n            .then(result => {\n                this.props.dispatch({ type: 'DELETE_ACTIVE' })\n            })\n            .catch(error => console.log('error', error))\n    }\n\n    logout = () => {\n        this.props.dispatch({type: 'LOG_OUT'})\n        this.props.dispatch({type: 'TOGGLE_VIEW_EDIT'})\n    }\n\n    render() {\n        if (!this.props.show) return null\n\n        const { title, composer, lyricist, performer, recording, info } = this.props.song\n        const buttonTitle = this.props.readyToSave ? 'Tallenna' : 'Tarkista soinnut'\n        return (\n            <div className=\"AdminTools\">\n                <div className=\"admin-tools-headers\">\n                    <div /> <button onClick={this.logout}>kirjaudu ulos</button>\n                    <label>Kappaleen nimi</label>\n                    <input type=\"text\" value={title} onChange={this.edit('title')} />\n                    <label>Säveltäjä</label>\n                    <input type=\"text\" value={composer} onChange={this.edit('composer')} />\n                    <label>Sanoittaja</label>\n                    <input type=\"text\" value={lyricist} onChange={this.edit('lyricist')} />\n                    <label>Esittäjä</label>\n                    <input type=\"text\" value={performer} onChange={this.edit('performer')} />\n                    <label>Tallenne</label>\n                    <input type=\"text\" value={recording} onChange={this.edit('recording')} />\n                    <label>Lisätietoja</label>\n                    <input type=\"text\" value={info} onChange={this.edit('info')} />\n                    <div />\n                    <div>\n                        <button onClick={this.props.updateViewOrSave}>{buttonTitle}</button>\n                        {this.props.addNew ? (\n                            <Link to=\"/\">\n                                <button onClick={this.cancel}>peruuta</button>\n                            </Link>\n                        ) : (\n                            <Link to=\"/\">\n                                <button onClick={this.delete} style={{ color: this.state.delete ? 'red' : 'black' }}>\n                                    {this.state.delete ? 'varmista poisto' : 'poista'}\n                                </button>\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        song: state.songs.songs[state.songs.active],\n        addNew: state.songs.addNew,\n        readyToSave: state.songs.readyToSave,\n        show: state.view.showEdit\n    }\n}\n\nexport default connect(mapStateToProps)(AdminTools)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getInterval, transposeNote, transposeBody } from '../../../tools/Music.js'\nimport { FaLongArrowAltRight } from 'react-icons/fa'\n\nimport './SongTools.css'\n\nclass SongTools extends React.Component {\n    state = {\n        semitones: '0',\n        direction: 'up',\n        from: '',\n        to: ''\n    }\n\n    componentDidMount = () => {\n        this.setState({ from: this.guessKey(this.props.song.body) })\n    }\n\n    guessKey = (body) => {\n        for (let i = body.length - 1; i >= 0; i--) {\n            if (body[i].type === 'chord') {\n                const chords = body[i].value.split(/\\s+/)\n                const lastChord = chords[chords.length - 1]\n                if (lastChord.charAt(1) === '#' || lastChord.charAt(1) === 'b') {\n                    console.log('guessing', lastChord.substring(0, 2))\n                    return lastChord.substring(0, 2)\n                } else {\n                    console.log('guessing', lastChord.substring(0, 1))\n                    return lastChord.substring(0, 1)\n                }\n            }\n        }\n    }\n\n    changeSemitones = event => {\n        const value = Number(event.target.value)\n        const newState = { semitones: value }\n\n        if (this.state.from) {\n            const semitones = this.state.direction === 'up' ? value : -value\n            newState.to = transposeNote(this.state.from, semitones)\n        }\n        this.setState(newState)\n    }\n\n    changeDirection = event => {\n        const newState = { direction: event.target.value }\n\n        if (this.state.from) {\n            const semitones = event.target.value === 'up' ? this.state.semitones : -this.state.semitones\n            newState.to = transposeNote(this.state.from, semitones)\n        }\n        this.setState(newState)\n    }\n\n    changeFrom = event => {\n        if (event.target.value === '') {\n            this.setState({ from: '' })\n            return\n        }\n        const newState = { from: event.target.value }\n\n        if (this.state.to) {\n            const interval = getInterval(event.target.value, this.state.to)\n            if (1 / interval > 0) {\n                newState.direction = 'up'\n                newState.semitones = interval\n            } else {\n                newState.direction = 'down'\n                newState.semitones = -interval\n            }\n        }\n        this.setState(newState)\n    }\n\n    changeTo = event => {\n        if (event.target.value === '') {\n            this.setState({ to: '' })\n            return\n        }\n\n        const newState = { to: event.target.value }\n\n        if (this.state.from) {\n            const interval = getInterval(this.state.from, event.target.value)\n            if (1 / interval > 0) {\n                newState.direction = 'up'\n                newState.semitones = interval\n            } else {\n                newState.direction = 'down'\n                newState.semitones = -interval\n            }\n        }\n        this.setState(newState)\n    }\n\n    transpose = () => {\n        const semitones = this.state.direction === 'up' ? this.state.semitones : -this.state.semitones\n        const body = transposeBody(this.props.song.body, semitones)\n        this.setState({ from: this.guessKey(body), to: '' })\n        this.props.setSongBody(body)\n    }\n\n    render() {\n        if (!this.props.show) return null\n\n        return (\n            <div className=\"SongTools\">\n                Transponoi\n                <select value={this.state.direction} onChange={this.changeDirection}>\n                    <option value=\"up\">ylös</option>\n                    <option value=\"down\">alas</option>\n                </select>\n                <select value={this.state.semitones} onChange={this.changeSemitones}>\n                    {Array.from(new Array(12), (x, i) => i).map(i => (\n                        <option key={`semitones-${i}`} value={i}>\n                            {i}\n                        </option>\n                    ))}\n                </select>\n                puolisävelaskelta\n                <input type=\"text\" value={this.state.from} onChange={this.changeFrom} />\n                <FaLongArrowAltRight style={{ verticalAlign: '-0.3em' }} />\n                <input type=\"text\" value={this.state.to} onChange={this.changeTo} />\n                <br />\n                <button onClick={this.transpose}>Transponoi</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        song: state.songs.songs[state.songs.active],\n        show: state.view.showTools\n    }\n}\nexport default connect(mapStateToProps)(SongTools)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport SongBody from './songbody/SongBody'\nimport SongActions from './songactions/SongActions'\nimport SongInfo from './songinfo/SongInfo'\nimport AdminTools from './admintools/AdminTools'\nimport SongTools from './songtools/SongTools'\n\nimport { Redirect } from 'react-router-dom'\nimport './Content.css'\n\nclass Content extends React.Component {\n    state = { redirect: false }\n    songBody = React.createRef()\n\n    options = { chords: '', transpose: { transpose: false } }\n\n    componentDidMount = () => {\n        this.songBody.current.setContent(this.props.song.body, this.options)\n    }\n\n    componentDidUpdate = prevProps => {\n        if (this.props.showEdit !== prevProps.showEdit) {\n            console.log('1')\n            this.options = { ...this.options, chords: this.props.showEdit ? 'highlight' : '' }\n            this.updateView(this.options)\n        }\n    }\n\n    save = () => {\n        if (this.props.addNew) {\n            axios\n                .post('/api/songs/', this.props.song, {\n                    headers: { authorization: 'bearer ' + this.props.admin }\n                })\n                .then(result => {\n                    console.log('result', result)\n                    this.setState({ redirect: result.data._id })\n                })\n                .catch(error => console.log('error', error))\n        } else {\n            axios\n                .put('/api/songs/' + this.props.song._id, this.props.song, {\n                    headers: { authorization: 'bearer ' + this.props.admin }\n                })\n                .then(result => {\n                    console.log('result', result)\n                    this.props.dispatch({ type: 'PUT_SONG', payload: result.data })\n                })\n                .catch(error => console.log('error', error))\n        }\n    }\n\n    updateViewOrSave = () => {\n        if (this.props.readyToSave) {\n            this.save()\n        } else {\n            this.updateView()\n        }\n    }\n\n    updateView = () => {\n        this.songBody.current.update(this.options)\n        this.props.dispatch({ type: 'SET_READY_TO_SAVE', payload: true })\n    }\n\n    onChange = () => {\n        this.props.dispatch({\n            type: 'SET_ACTIVE_PROP',\n            payload: {\n                prop: 'body',\n                value: this.songBody.current.getContent()\n            }\n        })\n        this.props.dispatch({ type: 'SET_READY_TO_SAVE', payload: false })\n    }\n\n    setSongBody = body => {\n        this.props.dispatch({\n            type: 'SET_ACTIVE_PROP',\n            payload: {\n                prop: 'body',\n                value: body\n            }\n        })\n        this.props.dispatch({ type: 'SET_READY_TO_SAVE', payload: false })\n        this.songBody.current.setContent(body, this.options)\n    }\n\n    render() {\n        if (this.state.redirect) return <Redirect to={`/songs/${this.state.redirect}`} />\n\n        return (\n            <div className=\"Content roundedbox\">\n                <h2>{this.props.song.title}</h2>\n                <SongActions updateView={this.updateView} />\n                <SongInfo />\n                <SongTools setSongBody={this.setSongBody} />\n                <AdminTools updateViewOrSave={this.updateViewOrSave} onChange={this.onChange} />\n                <SongBody ref={this.songBody} onChange={this.onChange} edit={this.props.showEdit} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        song: state.songs.songs[state.songs.active],\n        readyToSave: state.songs.readyToSave,\n        addNew: state.songs.addNew,\n        admin: state.login.admin,\n        showEdit: state.view.showEdit\n    }\n}\n\nexport default connect(mapStateToProps)(Content)\n","import React from 'react'\n\nclass FrontPage extends React.Component {\n    render() {\n        return (\n            <div className=\"Content roundedbox\">\n                <h2>Etusivu</h2>\n            </div>\n        )\n    }\n}\n\nexport default FrontPage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\nimport axios from 'axios'\n\nimport SideBar from './sidebar/SideBar'\nimport Content from './content/Content'\nimport FrontPage from './frontpage/FrontPage'\nimport './SongBook.css'\n\nconst apiUrl = '/api/songs'\n\nclass SongBook extends React.Component {\n    async componentDidMount() {\n        const response = await axios.get(apiUrl).catch(error => console.log('error fetching songs from db', error))\n\n        const songs = response.data\n        songs.sort((a, b) => a.title.localeCompare(b.title))\n        this.props.dispatch({ type: 'LOG_IN' })\n        this.props.dispatch({ type: 'SET_SONGS', payload: songs })\n\n        if (this.props.match) {\n            const songId = this.props.match.params.id\n            for (let i = 0; i < songs.length; i++) {\n                if (songs[i]._id === songId) {\n                    this.props.dispatch({ type: 'SET_ACTIVE', payload: i })\n                    break\n                }\n            }\n        }\n    }\n\n    toFrontPage = () => {\n        this.props.dispatch({ type: 'SET_ACTIVE', payload: undefined })\n    }\n\n    render() {\n\n        return (\n            <div className=\"SongBook\">\n                <div className=\"Header\">\n                    <Link to=\"/\" id=\"site-header-link\">\n                        <h1 onClick={this.toFrontPage}>Laulukirja</h1>\n                    </Link>\n                </div>\n\n                <SideBar />\n                {this.props.active !== undefined ? (\n                    <Content key={`content-song-${this.props.active}`} />\n                ) : (\n                    <FrontPage />\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.songs.active,\n        admin: state.login.admin\n    }\n}\n\nexport default connect(mapStateToProps)(SongBook)\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./Login.css\";\n\nclass Login extends React.Component {\n  state = {\n    password: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      axios\n        .post(\"/api/login\", { password: this.state.password })\n        .then(response => {\n          const token = response.data.token;\n          window.localStorage.setItem(\"admin\", token);\n          this.setState({redirect: true})\n        })\n        .catch(error => {\n          console.log(\"login failed\", error);\n        });\n    }\n  };\n\n  render() {\n    if (this.state.redirect) return <Redirect to='/' />\n\n    return (\n      <div className=\"Login\">\n        <div className=\"loginBox roundedbox\">\n          <h3>Kirjaudu sisään</h3>\n          <input type=\"text\" value=\"admin\" disabled />\n          <input\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Switch, Route } from 'react-router-dom'\nimport store from './store'\nimport SongBook from './songbook/SongBook'\nimport Login from './login/Login'\nimport './index.css'\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={SongBook} />\n                <Route path=\"/songs/:id\" component={SongBook} />\n                <Route path=\"/login\" component={Login} />\n            </Switch>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}